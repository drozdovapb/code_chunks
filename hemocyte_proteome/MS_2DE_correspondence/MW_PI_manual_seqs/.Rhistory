scale_x_continuous(limits=c(3, 10))  +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
scale_shape_manual(values = c(78, 80, 83)) +
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source), ], aes(x = pI_final, y = MW_final,
shape = Source, size = log10(Total.Quantity))) +
geom_point(alpha = 0.5) +
scale_x_continuous(limits=c(3, 10))  +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source), ], aes(x = pI_final, y = MW_final,
shape = Source, size = log10(Total.Quantity))) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits=c(3, 10))  +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source), ], aes(x = pI_final, y = MW_final,
#shape = Source,
size = log10(Total.Quantity))) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits=c(3, 10))  +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
### 36
#GHHK01014723_1__331_801___
# >GHHK01014723_1__331_801___
# MASAGAPTLVLGLLLFVGAANAIHRCPTDYELIQNECYRVVQDRKSVADAATFCEFESGT
# LASMSTLEAKEAVVDLVNRIAPGQYWTSGADMGGRFMWSNTEENINPRFKGRQFRPQTCV
# YLCSHTRMFWDRTCNQRLGFICQKNPELDITSVEAF*
## peptides: CPTDYELIQNECYR (26...) to NPELDITSVEAF (the very end)
## yeah!!!
## SignalP-5.0: Cleavage site between pos. 22 and 23: ANA-IH. Probability: 0.9094
seqGHHK01014723 <- read.fasta("GHHK01014723_1__331_801_mature.fasta")
sapply(seqGHHK01014723, function(x) pmw(toupper(x))/1000)
sapply(seqGHHK01014723, function(x) computePI(toupper(x)))
# VLHPQIGLIFDHIKAELGEEKGEHVLPPLKYDYTGLEPSISGMIMEIHHTKHHQGYINNL
# KAAVAKLNEAQANGDIAASNALVPALKFNGGGHLNHTIFWTNMAPNTSGTAPEPAGELLQ
# AINDRFGSFQDFKDQFSAASVAVKGSGWGWLGYCPVNNKLDIATCQNQDPLQLTHGLVPL
# LGLDVWEHAYYLQYKNLRPDYVKAFFNVINWDNVAERYAKARADAGN*
## Peptides:KLAELSGIEVDQIR (starts 71) - AFFNVINWDNVAER (almost the end)
## No signal peptides...
## from the closest Met?
## Swissprot: mostly query 140-170 / subject 2-17
## nr: best hits query 58 (some 54) / subject 1
## the Met closest to the first peptide is 58. Matches!!!
seqGHHK01019391 <- read.fasta("GHHK01019391_1__170_1213___closest_Met.fasta")
## so, let's take 23 to the end
sapply(seqGHHK01019391, function(x) pmw(toupper(x))/1000)
sapply(seqGHHK01019391, function(x) computePI(toupper(x)))
## TODO: переделать с медианами для каждой точки и звёздочками?!
library(openxlsx)
abundance_upd <- read.xlsx("Abundance_MW_pI_manual.xlsx")
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source), ], aes(x = pI_final, y = MW_final,
#shape = Source,
size = log10(Total.Quantity))) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits=c(3, 10))  +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
## 46
# >GHHK01013689_1__145_798___
# MGGLLLISLLAAVSTAVNGQITSAHVGTSGGSSNFQGQGAALSENVGPDGSRQGECAYAD
# SNGQQIQVRYSQQQGREAQYRLIKGSSGTNPAAAYEQCLQQYRASQQAGAAFIPDFNSFN
# PFAGGGFDFGSLANAAQAFAGGFGGAVDPGFQQAAAGGVRHAHDQVGAAAHVVPSSLVEQ
# MEVLRRQNLQLQQNVFEMQQRNAELHNRLAGRFRRGL*
## Peptides: GSSGTNPAAAYEQCLQQYR (85+) to QNLQLQQNVFEMQQR (almost the end)
## Swissprot: nothing; nr: best hit 33% identity
## Cleavage site between pos. 19 and 20: VNG-QI. Probability: 0.8464
## Let's take without signal sequence...
seqGHHK01013689 <- read.fasta("GHHK01013689_1__145_798___mature.fasta")
## 46
# >GHHK01013689_1__145_798___
# MGGLLLISLLAAVSTAVNGQITSAHVGTSGGSSNFQGQGAALSENVGPDGSRQGECAYAD
# SNGQQIQVRYSQQQGREAQYRLIKGSSGTNPAAAYEQCLQQYRASQQAGAAFIPDFNSFN
# PFAGGGFDFGSLANAAQAFAGGFGGAVDPGFQQAAAGGVRHAHDQVGAAAHVVPSSLVEQ
# MEVLRRQNLQLQQNVFEMQQRNAELHNRLAGRFRRGL*
## Peptides: GSSGTNPAAAYEQCLQQYR (85+) to QNLQLQQNVFEMQQR (almost the end)
## Swissprot: nothing; nr: best hit 33% identity
## Cleavage site between pos. 19 and 20: VNG-QI. Probability: 0.8464
## Let's take without signal sequence...
seqGHHK01013689 <- read.fasta("GHHK01013689_1__145_798___mature.fasta")
sapply(seqGHHK01013689, function(x) pmw(toupper(x))/1000)
sapply(seqGHHK01013689, function(x) computePI(toupper(x)))
# DCECVPYYQCKEGVIITDGEGVIDIRFGNSLNDTGSTRLNSHSQCQNFLDVCCQHPNTAV
# TPGPGPADQYLAKCGRRNPTGVNARVSGFTATQAQFGEFPWMAAILQTEFVGAEEVNLYV
# CGGSLIYPDVVLTAAHCVQSWQNTPTVLKVRLGEWDTQRTYELYTHVDRAVSKVIVNNQY
# NPGSLSNDFAILLLETPVALTHHIDTVCLPDVYQNVEPTKCFVTGWGKNEFGKEGEFQNI
# LKKVSLPLVSHPDCEKALRTTRLGKYFNLHSTFSCAGGGIAGQDACNGDGGSPLVCPLLN
# DHATYVQVGIVAWGIGCGEAGIPGVYADVTKGITWVNQELAKLPYTRTG*
## Peptides: EGVIITDGEGVIDIR (72+) to GITWVNQELAK (it's basically the end)
## SignalP: Cleavage site between pos. 22 and 23: VAA-RS. Probability: 0.6109 (signal peptide likelihood 0.994)
## nr blastp: 84/17 for T. longiramus (88%); the others 1/1...
## Take the mature output?
seqGHHK01019869 <- read.fasta("GHHK01019869_1__63_1292___mature.fasta")
sapply(seqGHHK01019869, function(x) pmw(toupper(x))/1000)
sapply(seqGHHK01019869, function(x) computePI(toupper(x)))
# >GHHK01026820_1__1_1029___
# QETSDGMYQCGPASLEAVRRGEVSLQYDVPFVLAEVNADLVRWQEDETSENGFKMINSHK
# SHIGRQLLTKAVGVLDDTSGSTADREDCTTDYKAPEGTDTERVTLYGAARNIRTARHAFR
# FPSVAEMDVVFELEKVDVVDVGQDYAVAVKITNNGSAVRTVSLSLSSSSEYYTGVKAHTV
# KRAEGTFVMQPGKEEALRMPVRYKDYITKLVEHGTMKILAIGNVKETTQSYIEDDKFQIR
# KPNITVDTPNTSVLGTEMVVRVHFNNPLQEPLTEAYIVVDGPGLTRPKRIPVPDVPAKTL
# FSHSLKLVSKRAGERSLVVTFGSKQITDIMGSSNIVVTAQEA*
## C-complete but N?
## Peptides: RGEVSLQYDVPFVLAEVNADLVR (20+) to SLVVTFGSK (almost the end)
## SignalP: no signal peptide...
seqGHHK01026820 <- read.fasta("GHHK01026820_1__1_1029___first_Met.fasta")
sapply(seqGHHK01026820, function(x) pmw(toupper(x))/1000)
sapply(seqGHHK01026820, function(x) computePI(toupper(x)))
# NRANNNRNTDLTQPLVVNHDQDFSGLRGRLENRVSYWREDYGLNAHHWHWHLVYPTDVRT
# VKSPDRKGELFYYMHSQIVARYDMERLSVGLPRVLKLDSFREPILEGYFSKLRFDNADTN
# PNRIQVPGLHPNATLWGARQDNTRLSNYTRMQTFIPVDVGELEMWSNRLLDGIHQGFFIS
# NKGERVLLSDDVDITDGQQKRGVDIIGDAFEADQNISVNYRLYGDLHNFGHVVISSCHDP
# DGTHGENLGVMSDSAVAMRDPVFYRWHKYVDWVFQQYKATQPSYTKAQLELPGVNITRIG
# VATGNLADEIHTGWNRRLFEASRGIDFGTTQSVQLNLQHLDHKPFDYHILVTNSTPGPKQ
# VYVRIFLAPKFNQNQTSVQMPLNEQRLLWTEMDKFVFNLKPGQNHIKRASSLSSVGIPGE
# LTFRQLEQGLRQPGDTRPAADAQEDFCGCGWPQHLLVPRGRPEGMIFQVFAMLTDFELDR
# IPRVSGSRQCAGAASYCGVLDERYPDKRPMGFPFDRLPPRELRTPQQQV
## swissprot: many hits; identity not great...
seqvect37 <- read.fasta(file = "./GHHK01015873_1__2_1768___best_hits.fasta")
# NRANNNRNTDLTQPLVVNHDQDFSGLRGRLENRVSYWREDYGLNAHHWHWHLVYPTDVRT
# VKSPDRKGELFYYMHSQIVARYDMERLSVGLPRVLKLDSFREPILEGYFSKLRFDNADTN
# PNRIQVPGLHPNATLWGARQDNTRLSNYTRMQTFIPVDVGELEMWSNRLLDGIHQGFFIS
# NKGERVLLSDDVDITDGQQKRGVDIIGDAFEADQNISVNYRLYGDLHNFGHVVISSCHDP
# DGTHGENLGVMSDSAVAMRDPVFYRWHKYVDWVFQQYKATQPSYTKAQLELPGVNITRIG
# VATGNLADEIHTGWNRRLFEASRGIDFGTTQSVQLNLQHLDHKPFDYHILVTNSTPGPKQ
# VYVRIFLAPKFNQNQTSVQMPLNEQRLLWTEMDKFVFNLKPGQNHIKRASSLSSVGIPGE
# LTFRQLEQGLRQPGDTRPAADAQEDFCGCGWPQHLLVPRGRPEGMIFQVFAMLTDFELDR
# IPRVSGSRQCAGAASYCGVLDERYPDKRPMGFPFDRLPPRELRTPQQQV
## swissprot: many hits; identity not great...
seqvect37 <- read.fasta(file = "./GHHK01015873_1__2_1768___best_hits.fasta")
getMedianMWpI(seqvect37)
seqdf4
seqdf5
seqdf6
# CCPAQPQAAVGQGDSRLFKEPRRQVSMRTLSSQEVNEACQKGINVLTEVNALEDNLIRTN
# QVVPPETPAHGHLRFFRVTRSARQQHLQALQINQASRAMMSDFSLTPAQGTHGLRQFPVR
# NSILSNNCPVPPRCNPQAKYRSVDGTCNNLENSLYGRSETSFQRILPPVYDDGVSSPRTR
# SAAGGVLPSERVIASTVLVDRDDPDQQFTLSVMQWAQFIDHDLTHAPFARLSNNEGIDCC
# PNGQEATGATRHPECWPIRLPQDDPFYAPKGRFCMNFVRSMLGLNQECAFGYAEQMNQVT
# HWLDASNVYGSGQEEANRLRQGQGGLLQVSQNNLLPVNQASQGDCTARQRGGLCYHAGDS
# RVNEQPG
## C incomplete...
## swiss-prot? The best hit 32.58%...
## nr better
seqvect31 <- read.fasta(file = "./GHHK01013740_1__116_1576___10_best_hits_nr.fasta")
getMedianMWpI(seqvect31)
# >GHHK01016883_1__1_894___
# NEWLPIIVGSNFMTSFGLNPIQRGFSFDYNFVINPTMNNEFATAAFRFGHSLVQGFIRLF
# TPDNQETTIRMRDHFNSPHIFQGQAGVIDMFVRSFTRQAIQKFDSFVTDDLSNHLFQTPS
# QNFGMDLMSLNLHRGRDHGIAPYNAMREICGLRRATSFADFNDQIPTDIVTRLSQMYAHV
# DDVDFFVGGMSEKPVSGGLLGWTFLCVVGDQFARAKKGDRFFYDIGGQPGSFNEVQLQEI
# RKASWARILCDNGDNIDAVQPLAFRLASRSFNAPQPCQSNVIPRVNLAAWSGERPQA*
### Well, at least C complete...
### Peptides: GFSFDYNFVINPTMNNEFATAAFR (24th, 11th from Met) to VNLAAWSGER (3 aa to the end!)
### No signal peptide...
### Then we take from Met.
seqGHHK01016883 <- read.fasta("GHHK01016883_1__1_894___from_Met.fasta")
sapply(seqGHHK01016883, function(x) pmw(toupper(x))/1000)
sapply(seqGHHK01016883, function(x) computePI(toupper(x)))
# NRANNNRNTDLTQPLVVNHDQDFSGLRGRLENRVSYWREDYGLNAHHWHWHLVYPTDVRT
# VKSPDRKGELFYYMHSQIVARYDMERLSVGLPRVLKLDSFREPILEGYFSKLRFDNADTN
# PNRIQVPGLHPNATLWGARQDNTRLSNYTRMQTFIPVDVGELEMWSNRLLDGIHQGFFIS
# NKGERVLLSDDVDITDGQQKRGVDIIGDAFEADQNISVNYRLYGDLHNFGHVVISSCHDP
# DGTHGENLGVMSDSAVAMRDPVFYRWHKYVDWVFQQYKATQPSYTKAQLELPGVNITRIG
# VATGNLADEIHTGWNRRLFEASRGIDFGTTQSVQLNLQHLDHKPFDYHILVTNSTPGPKQ
# VYVRIFLAPKFNQNQTSVQMPLNEQRLLWTEMDKFVFNLKPGQNHIKRASSLSSVGIPGE
# LTFRQLEQGLRQPGDTRPAADAQEDFCGCGWPQHLLVPRGRPEGMIFQVFAMLTDFELDR
# IPRVSGSRQCAGAASYCGVLDERYPDKRPMGFPFDRLPPRELRTPQQQV
## swissprot: many hits; identity not great...
seqvect37 <- read.fasta(file = "./GHHK01015873_1__2_1768___best_hits.fasta")
getMedianMWpI(seqvect37)
### 38
# >GHHK01001186_1__1_465___
# GHPRKTQLEMTGPGQYRATFLPDDCGKYRVGVRYNDEELPSSPFPVQVFATGKADKCEIT
# EGISHALNTGEEYCISVNAKNAGHGAVTCRIRSTSGSDLDIDITDNGDGTFSIYYTVEDA
# GDYTLAVKFGGQPVPQGFYTFTAQESSESYPAPGT
## It's a fragment...
## swissprot: only 1, Dme, 40%
## nr better, >70% identity
seqvect38 <- read.fasta(file = "./GHHK01001186_1__1_465___10_best_nr.txt")
getMedianMWpI(seqvect37)
getMedianMWpI(seqvect38)
### 39
# >GHHK01021786_1__1_414___
# ASSSQLEKSYELPDGQVITIGNERFRCPETLFQPSFIGMEAAGIHETCYNSIMKCDVDIR
# KDLYANTVLSGGTTMFPGIADRMQKEISALAPPTMKIKIIAPPERKYSVWIGGSILASLS
# TFQQMWISKQEYDESGPG
seqvect39 <- read.fasta(file = "./GHHK01021786_1__1_414___10_best_hits.fasta")
getMedianMWpI(seqvect39)
### 43
# >GHHK01004467_1__1_759___
# EGIGVADPSGFGSKIDSGIGGGAGFGGPGGGAGGFGGTGGGAGGFGGTGGGAGGFGGTGG
# GAGGFGGTGGGAGGLGGTGAGGYGGSSGGGAGTGGFGGTGGTGGFGGSGGGGLGGGNLGG
# GTGDLSTAIGGGGVPGVDYPTLAAVPDTGFDCSGRTPGYYADTGAEARCQVFHICQFDDR
# HDSFLCPNGTVFNQQYFVCDWWYNFSCDEAEGYYFLNEGIGVADPSGFGSKIDSGIGGGA
# GFGGPGGGAGGFG
## a fragment...
## swiss-prot: 2 hits; coverage ~25%
## nr: well, identity ~70, high length variance...
seqvect43 <- read.fasta(file = "GHHK01004467_1__1_759___10_best_nr.fasta")
getMedianMWpI(seqvect43)
# SEVISKAYTAQMTQTPGKFNMDFTGSKKNPEQRVAYFGEDIGLNIHHVTWHLDFPFWWQD
# SYGYHLDRKGELFFWAHHQLTTRFDNERLSNHLGMVDELYWDRPIVEGFAPHTTYRYGGE
# FPARPDNVDFEDVDGEIRVRDMIIHESRIRDAIAHGYITAADGSKIDIRNNEGIDHLGDI
# IESSLYSPNIEYYGGLHNDAHIILGRQSDPHGKFNLPPGVMEHFETATRDPAFFRLHKYM
# DNLFKEYKDTLPAYTKDELEFPGISLNSVRVDGVLETFFEDYEFDLGNAVDSNPNIADVS
# VSASVSRLNHKRFALKFEVINNDSVEKHGVVRVFLCPRRDENGIIFSFEEGRWHCIEMDK
# FWTKLASGNNKISRSSRDFSVSVPDVPSFKSLINTADQAVAKGTPLGLEEFDRSCGIPDR
# LLLPKGNSRGMEYVLAVAVTDGEADIQHDLLEKSEAHSHAQCGVHGEKYPDHQPMGFPLD
# RRIEDERIMLGSPNIKYTIVSVTFKG*
# wow, it's a huge hemocyanin fragment!
seqvect44 <- read.fasta(file = "GHHK01000352_1__3_2063___")
getMedianMWpI(seqvect44)
# SEVISKAYTAQMTQTPGKFNMDFTGSKKNPEQRVAYFGEDIGLNIHHVTWHLDFPFWWQD
# SYGYHLDRKGELFFWAHHQLTTRFDNERLSNHLGMVDELYWDRPIVEGFAPHTTYRYGGE
# FPARPDNVDFEDVDGEIRVRDMIIHESRIRDAIAHGYITAADGSKIDIRNNEGIDHLGDI
# IESSLYSPNIEYYGGLHNDAHIILGRQSDPHGKFNLPPGVMEHFETATRDPAFFRLHKYM
# DNLFKEYKDTLPAYTKDELEFPGISLNSVRVDGVLETFFEDYEFDLGNAVDSNPNIADVS
# VSASVSRLNHKRFALKFEVINNDSVEKHGVVRVFLCPRRDENGIIFSFEEGRWHCIEMDK
# FWTKLASGNNKISRSSRDFSVSVPDVPSFKSLINTADQAVAKGTPLGLEEFDRSCGIPDR
# LLLPKGNSRGMEYVLAVAVTDGEADIQHDLLEKSEAHSHAQCGVHGEKYPDHQPMGFPLD
# RRIEDERIMLGSPNIKYTIVSVTFKG*
# wow, it's a huge hemocyanin fragment!
seqvect44 <- read.fasta(file = "GHHK01000352_1__3_2063___10_best_hits.fasta")
getMedianMWpI(seqvect44)
seqdf40
### 45
# >GHHK01011502_1__3_539___
# QSKSGLAQWWTDTVSSSKMRVPATIAVTMATLVALASSTSETGPSMHVGTAGCLSWCRHR
# HNPTEFFCCKADPNSKFHHGQCPQRIVANNGMEESYCQIDHHCQPNEKCCSSDYNKQSTC
# VAAVTDRHQPRTPPPVINARFGGDPVIVGNNFDDLGFDVTYRRGNEGWGSMGDMEPTE*
## Peptide coverage: HNPTEFFCCK (61+) to RGNEGWGSMGDMEPTE (it's the very end)
## Signal peptide probability ~0.58
seqGHHK01011502 <- read.fasta("GHHK01011502_1__3_539___from_closest_Met.fasta")
sapply(seqGHHK01011502, function(x) pmw(toupper(x))/1000)
sapply(seqGHHK01011502, function(x) computePI(toupper(x)))
getMedianMWpI(seqvect44)
### 48
# >GHHK01010257_1__35_424___
# MALDGTFVLKSNDNYDAWLQAVGVPAELAAKMCAAKPKMTVTTTDNTLTVKTIAGEKEFD
# NTIVFGKDSVIDVAGLKYTVNVKVTDKGYSGTVAMGGKNGTLEVVADADGFTQTIVVDGV
# TGKRVYTRS*
## Is it complete?!
## Peptide coverage: ALDGTFVLK (2+) to GYSGTVAMGGK (it's not the end, actually)
seqGHHK01010257 <- read.fasta("GHHK01010257_1__35_424___full.fasta")
sapply(seqGHHK01010257, function(x) pmw(toupper(x))/1000)
sapply(seqGHHK01010257, function(x) computePI(toupper(x)))
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source) &
abundance_upd$Total.Quantity > 1391, ], aes(x = pI_final, y = MW_final,
#shape = Source,
size = log10(Total.Quantity))) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits=c(3, 10))  +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source) &
abundance_upd$Total.Quantity > 1391, ], aes(x = pI_final, y = MW_final,
#shape = Source,
size = log10(Total.Quantity))) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits=c(3, 10))  +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
abundance_upd[complete.cases(abundance_upd$Source) &
abundance_upd$Total.Quantity > 1391, ]
abundance_upd <- read.xlsx("Abundance_MW_pI_manual.xlsx")
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source) &
abundance_upd$Total.Quantity > 1391 &
abundance_upd$Reliability > 2, ],
aes(x = pI_final, y = MW_final,
#shape = Source,
size = log10(Total.Quantity))) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits=c(3, 10))  +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
seqdf8
seqdf11
seqdf13
seqdf14
seqdf18
seqdf17
getMedianMWpI(seqvect28)
## TODO: переделать с медианами для каждой точки и звёздочками?!
library(openxlsx)
abundance_upd <- read.xlsx("Abundance_MW_pI_manual.xlsx")
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source) &
abundance_upd$Total.Quantity > 1391 &
abundance_upd$Reliability > 2, ],
aes(x = pI_final, y = MW_final,
#shape = Source,
size = log10(Total.Quantity))) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits=c(3, 10))  +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
###50
# >GHHK01013584_1__22_708___
# MVRWLPLESNPEVMNKFLSGMGVPDSVKVCDVLGLEAELLAMVPRPVYALLLLYPLTSKS
# EEFKEQQESGIESAGQDLAEDLYYMKQFVGNACGTVALMHALANNSDKIEVADGPLKEFL
# EKTKELDPEERGHALEDDESISAVHEDCAAEGQTEAPDREHKLDTHFIALVNVGDRLYEL
# DGRKKFPINHGPTSEENFLIDGASVLRDFMDRDSDETRFAVVALTAAE*
## Is it complete?
## Peptides: WLPLESNPEVMNK (4+, so the beginning) to DFMDRDSDETR (10 aa to the end, so probably the end)
seqGHHK01013584 <- read.fasta("GHHK01013584_full_seq.fasta")
sapply(seqGHHK01013584, function(x) pmw(toupper(x))/1000)
sapply(seqGHHK01013584, function(x) computePI(toupper(x)))
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source) &
abundance_upd$Total.Quantity > 1391 &
abundance_upd$Reliability > 2, ],
aes(x = pI_final, y = MW_final,
#shape = Source,
size = log10(Total.Quantity))) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits=c(3, 10))  +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source) &
abundance_upd$Total.Quantity > 1391 &
abundance_upd$Reliability > 2, ],
aes(x = pI_final, y = MW_final,
#shape = Source,
size = log10(Total.Quantity))) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits=c(3, 10))  +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
abundance_upd <- read.xlsx("Abundance_MW_pI_manual.xlsx")
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source) &
abundance_upd$Total.Quantity > 1391 &
abundance_upd$Reliability > 2, ],
aes(x = pI_final, y = MW_final,
#shape = Source,
size = log10(Total.Quantity))) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits=c(3, 10))  +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source) &
abundance_upd$Total.Quantity > 1391 &
abundance_upd$Reliability > 2, ],
aes(x = pI_final, y = MW_final,
label = Short_annotation,
#shape = Source,
size = log10(Total.Quantity))) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits=c(3, 10))  +
geom_text() +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source) &
abundance_upd$Total.Quantity > 1391 &
abundance_upd$Reliability > 2, ],
aes(x = pI_final, y = MW_final,
label = Short_annotation,
#shape = Source,
size = log10(Total.Quantity))) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits=c(3, 10))  +
geom_text_repel() +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
library(ggrepel)
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source) &
abundance_upd$Total.Quantity > 1391 &
abundance_upd$Reliability > 2, ],
aes(x = pI_final, y = MW_final,
label = Short_annotation,
#shape = Source,
size = log10(Total.Quantity))) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits=c(3, 10))  +
geom_text_repel() +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
seqdf16
abundance_upd <- read.xlsx("Abundance_MW_pI_manual.xlsx")
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source) &
abundance_upd$Total.Quantity > 1391 &
abundance_upd$Reliability > 2, ],
aes(x = pI_final, y = MW_final,
label = Short_annotation,
#shape = Source,
size = log10(Total.Quantity))) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits=c(3, 10))  +
geom_text_repel() +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
abundance_upd[complete.cases(abundance_upd$Source) &
abundance_upd$Total.Quantity > 1391 &
abundance_upd$Reliability > 2, ]
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source) &
abundance_upd$Total.Quantity > 1391 &
abundance_upd$Reliability > 2 &
abundance_upd$MW_final > 15, ],
aes(x = pI_final, y = MW_final,
label = Short_annotation,
#shape = Source,
size = log10(Total.Quantity))) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits=c(3, 10))  +
geom_text_repel() +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
abundance_upd[complete.cases(abundance_upd$Source) &
abundance_upd$Total.Quantity > 1391 &
abundance_upd$Reliability > 2 &
abundance_upd$MW_final > 15, ]
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source) &
abundance_upd$Total.Quantity > 1391 &
abundance_upd$Reliability > 2 &
abundance_upd$MW_final > 15, ],
aes(x = pI_final, y = MW_final,
label = Short_annotation,
#shape = Source,
size = log10(Total.Quantity))) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits=c(3, 10))  +
geom_text_repel() +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
abundance_upd <- read.xlsx("Abundance_MW_pI_manual.xlsx")
ggplot(data = abundance_upd[complete.cases(abundance_upd$Source) &
abundance_upd$Total.Quantity > 1391 &
abundance_upd$Reliability > 2 &
abundance_upd$MW_final > 15, ],
aes(x = pI_final, y = MW_final,
label = Short_annotation,
#shape = Source,
size = log10(Total.Quantity))) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits=c(3, 10))  +
geom_text_repel() +
theme_bw(base_size = 16) +
scale_size(limits = c(2.5, 4)) + ## log10(500) is 2.7
#scale_shape_manual(values = c(78, 80, 83)) + ## With letters
scale_y_log10(breaks = c(28, 36, 55, 72, 95, 130, 250), limits = c(15, 250)) +
#  scale_x_binned(breaks = c(3.0, 4.0, 4.5, 5.0, 5.5, 6, 10), limits = c(3, 10)) +
theme(legend.position = 'none')
